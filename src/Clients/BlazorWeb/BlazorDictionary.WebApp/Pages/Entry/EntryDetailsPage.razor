@page "/entry/{id:guid}"

@if (entry != null)
{
    <EntryViewerComponent Entry="@entry"></EntryViewerComponent>
    <br />
    if (comments != null)
    {
        foreach (var comment in comments.Results)
        {
            <BlazorDictionary.WebApp.Pages.EntryComment.Components.EntryCommentViewerComponent EntryComment="@comment"></BlazorDictionary.WebApp.Pages.EntryComment.Components.EntryCommentViewerComponent>
        }
    }

    <br />

    <AuthorizeView>
        <Authorized>
            <br/>
            <br/>
            <BlazorDictionary.WebApp.Pages.EntryComment.Components.CreateEntryCommentComponent EntryId="@entry.Id" EntrySubject="@entry.Subject" OnClicked="@OnCommentCreate"></BlazorDictionary.WebApp.Pages.EntryComment.Components.CreateEntryCommentComponent>
        </Authorized>
    </AuthorizeView>
}

@code {
    [Parameter]
    public Guid id{ get; set; }

    [Inject]
    IEntryService entryService { get; set; }

    private GetEntryDetailViewModel entry = new();
    private PagedViewModel<GetEntryCommentsViewModel> comments = new();
    private int currentPage = 1;

    protected override async Task OnParametersSetAsync()
    {
        entry = await entryService.GetEntryDetail(id);
        await RefreshComments(1);

        currentPage = comments.Page.CurrentPage;
    }

    public async Task OnCommentCreate(CreateEntryCommentCommand command)
    {
        await entryService.CreateEntryComments(command);
        await RefreshComments(currentPage);
    }

    private async Task RefreshComments(int pageNumber)
    {
        comments = await entryService.GetEntryComments(entry.Id, pageNumber, 10);
    }
}
